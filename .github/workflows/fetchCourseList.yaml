name: fetch course list

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"

jobs:
  get-semesters:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager

      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt update
          sudo apt install -y google-chrome-stable
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d'.' -f1)
          sudo apt install -y chromium-chromedriver
          echo "Chrome version: $CHROME_VERSION"

      - name: Get Semesters and Generate semester.json
        id: set-matrix
        run: |
          python -c "
          from selenium import webdriver
          from selenium.webdriver.common.by import By
          from selenium.webdriver.support.ui import Select
          from selenium.webdriver.support.ui import WebDriverWait
          from selenium.webdriver.support import expected_conditions as EC
          from webdriver_manager.chrome import ChromeDriverManager
          from selenium.webdriver.chrome.service import Service
          import json
          
          options = webdriver.ChromeOptions()
          options.add_argument('--headless')
          options.add_argument('--no-sandbox')
          options.add_argument('--disable-dev-shm-usage')
          options.add_argument('--disable-gpu')
          
          driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)
          driver.get('https://sys.ndhu.edu.tw/aa/class/course/Default.aspx')
          
          WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.NAME, 'ddlCOLLEGE')))
          
          semester_select = Select(driver.find_element(By.NAME, 'ddlYEAR'))
          all_semesters = [option.get_attribute('value').strip().replace('/', '-') for option in semester_select.options]
          
          # 儲存完整的學期列表到 semester.json
          with open('semester.json', 'w', encoding='utf-8') as f:
              json.dump(all_semesters, f, indent=4, ensure_ascii=False)
          
          # 過濾掉不需要爬取的學期
          crawl_semesters = [s for s in all_semesters if s.split('-')[0] >= '105' and s.split('-')[-1] <= '2']
          
          driver.quit()
          
          matrix = json.dumps({'semester': crawl_semesters})
          print(f'matrix={matrix}')
          " >> $GITHUB_OUTPUT

      - name: Upload semester.json
        uses: actions/upload-artifact@v4
        with:
          name: semester-list
          path: semester.json

  crawl-semester:
    needs: get-semesters
    runs-on: ubuntu-latest
    strategy:
      matrix:
        semester: ${{ fromJson(needs.get-semesters.outputs.matrix).semester }}
      fail-fast: false

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager

      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt update
          sudo apt install -y google-chrome-stable
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d'.' -f1)
          sudo apt install -y chromium-chromedriver
          echo "Chrome version: $CHROME_VERSION"

      - name: Run Selenium Crawler for Semester
        run: python crawler.py --semester ${{ matrix.semester }}

      - name: Upload Semester Data
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.semester }}
          path: ${{ matrix.semester }}/

  merge-results:
    needs: [get-semesters, crawl-semester]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare GitHub Pages Deployment
        run: |
          mkdir -p dist
          
          # 複製 semester.json 到根目錄
          if [ -f "artifacts/semester-list/semester.json" ]; then
            cp "artifacts/semester-list/semester.json" dist/
            echo "✅ 已複製 semester.json 到根目錄"
          else
            echo "❌ 找不到 semester.json"
          fi
          
          # 移動所有學期資料到 dist 目錄（維持原始學期名稱格式）
          for semester_dir in artifacts/*/; do
            semester_name=$(basename "$semester_dir")
            # 跳過 semester-list 目錄
            if [ "$semester_name" != "semester-list" ]; then
              if [ -d "$semester_dir" ]; then
                echo "📁 處理學期：$semester_name"
                mkdir -p "dist/$semester_name"
                cp -r "$semester_dir"/* "dist/$semester_name/"
              fi
            fi
          done
          
          echo "<h1>NDHU Course Data</h1>" > dist/index.html
          
          # 顯示最終結果
          echo "📋 最終 dist 目錄結構："
          ls -la dist/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.DEPLOY_TOKEN }}
          publish_dir: dist
          keep_files: false # 暫時先關閉，避免殘留意外生出來的檔案
